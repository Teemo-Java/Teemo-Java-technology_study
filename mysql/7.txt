主键可以通过聚簇索引来查找，但是如果是其他一个或多个字段来查找呢？ 

那么我们就需要创建其他索引了，这个索引可能是单列的也可能是联合的，这个索引也对应一颗B+树。叶子节点也是数据页 但是这个数据页仅仅存放主键和你建立索引的字段 ,

比如我们建立的索引是idx_name_age(name,age,hobby) ,那么叶子节点存放的就是 id，name，age，hobby 。非叶子节点存放的就是name ,age,hobby这种字段了，

这里节点的排序规则值得说一下，和聚簇索引不同的是，聚簇索引就直接比较的是主键值，这里比较的就是索引列的值了。
如果name值一样，那就比较age值，如果age值也一样，那就比较hobby值。所以到这里 应该就明白了"为什么使用联合索引有个最左匹配原则的限制吧?",因为索引树在排列节点的时候就是按照从左到右依次比较的呀。

那么我们通过select * from table where name = '张三' and age = 18。整个查询过程就是先去idx_name_age对应的B+树，从上往下一直搜索，直到找到叶子节点的id，
然后通过拿到的id再去聚簇索引中取值，这个过程叫"回表"。聚簇索引最靠近真实数据，所以也叫一级索引。其他索引都叫二级索引