数据页内部数据行之间的关系与查找

一个数据页内包含大量数据行，数据页之间构成了双向链表关系(这样是为了方便查找)，每个数据页对应一个页目录(页目录记录了主键和数据页槽位之间的对应关系)，数据行之间构成了单向链表关系 并且是从小到大排列的。

数据量少的时候(可能所有数据加起来也就够一个数据页)，通过主键查询数据的时候，先根据页目录进行二分查找，然后去槽位里取数据即可，
如果是非主键查询数据，我们无法借助页目录来快速定位槽，只能去数据页里一个一个的遍历了(数据量多了 那就是全表扫描了，每个数据页都去查找一下，使用不到任何索引)。



数据页分裂

随着数据量越来越多，一个数据页装不下这么多数据，那肯定会需要更多的数据页来装数据，但是由上面的知识我们知道 数据页内部是有序并且单向的，并且数据页之间的数据也是有序的并且单向的，也就是说后一页的数据最小值都大于前一页数据的最小值。
那么这就有一个问题了 ，比如新增的数据主键值比较小，那是不是得重新排列？ 那就有数据的移动过程？ 移动的目标就是保住数据行之间有序，数据页之间有序。
这也就是为什么UUID不适合做主键索引的原因了，因为UUID是无序的，那么在数据量大的情况下就极易造成数据页频繁分裂，让降低mysql性能。这里一般都要求主键是增长的才不会导致频繁页分裂。

